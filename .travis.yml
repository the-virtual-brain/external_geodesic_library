notifications:
  email: false

branches:
  only:
    - trunk

install:
  - pip3 install .
script:
  - pip3 install pytest
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then pytest --cov=gdist; else pytest; fi

.before_script_windows: &before_script_windows
  - python -m pip install --upgrade pip
  - pip install --user wheel

jobs:
  include:
    - name: "Python 3.8 on Xenial Linux"
      language: python
      os: linux
      python: 3.8
      env: COVERAGE=1
      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      before_install: pip3 install pytest-cov
      before_script: python3 setup.py clean --all build_ext --force --inplace
      after_script:
        - sudo chmod +x cppci.sh
        - ./cppci.sh
      after_success: bash <(curl -s https://codecov.io/bash) -cF python
    - name: "Python 3.8.0 on Windows"
      os: windows
      language: shell
      before_install:
        - choco install python --version 3.8.0
        - *before_script_windows
      env: PATH=/c/Python38:/c/Python38/Scripts:$PATH
    - name: "Python 3.7.0 on Windows"
      os: windows
      language: shell
      before_install:
        - choco install python --version 3.7.0
        - *before_script_windows
      env: PATH=/c/Python37:/c/Python37/Scripts:$PATH
    - name: "Python 3.6.0 on Windows"
      os: windows
      language: shell
      before_install:
        - choco install python --version 3.6.0
        - *before_script_windows
      env: PATH=/c/Python36:/c/Python36/Scripts:$PATH
    - name: "Python 3.7.4 on macOS"
      os: osx
      osx_image: xcode11.2
      language: shell
      before_install:
        - brew pin gdal; brew pin postgis; brew pin cairo; brew pin glib; brew pin gnutls; brew pin p11-kit; brew pin gnupg; brew pin poppler;
        - brew install llvm
      env:
        - CC="/usr/local/opt/llvm/bin/clang -L/usr/local/opt/llvm/lib -Wl,-rpath,/usr/local/opt/llvm/lib"
        - CXX="/usr/local/opt/llvm/bin/clang++ -L/usr/local/opt/llvm/lib -Wl,-rpath,/usr/local/opt/llvm/lib"
    - stage: lint
      language: python
      install: pip install flake8
      script:
        - flake8 . --show-source --statistics
